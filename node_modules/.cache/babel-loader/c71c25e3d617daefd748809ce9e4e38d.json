{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\nexport function onErrorResumeNext() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  var nextSources = argsOrArgArray(sources);\n  return new Observable(function (subscriber) {\n    var sourceIndex = 0;\n    var subscribeNext = function () {\n      if (sourceIndex < nextSources.length) {\n        var nextSource = void 0;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        var innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,SAAS,QAAQ,aAAa;AAsEvC,OAAM,SAAUC,iBAAiB;EAC/B;OAAA,UAAyE,EAAzEC,qBAAyE,EAAzEA,IAAyE;IAAzEC;;EAEA,IAAMC,WAAW,GAA4BP,cAAc,CAACM,OAAO,CAAQ;EAE3E,OAAO,IAAIP,UAAU,CAAC,UAACS,UAAU;IAC/B,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAMC,aAAa,GAAG;MACpB,IAAID,WAAW,GAAGF,WAAW,CAACI,MAAM,EAAE;QACpC,IAAIC,UAAU,SAAuB;QACrC,IAAI;UACFA,UAAU,GAAGT,SAAS,CAACI,WAAW,CAACE,WAAW,EAAE,CAAC,CAAC;SACnD,CAAC,OAAOI,GAAG,EAAE;UACZH,aAAa,EAAE;UACf;;QAEF,IAAMI,eAAe,GAAG,IAAIb,kBAAkB,CAACO,UAAU,EAAEO,SAAS,EAAEb,IAAI,EAAEA,IAAI,CAAC;QACjFU,UAAU,CAACI,SAAS,CAACF,eAAe,CAAC;QACrCA,eAAe,CAACG,GAAG,CAACP,aAAa,CAAC;OACnC,MAAM;QACLF,UAAU,CAACU,QAAQ,EAAE;;IAEzB,CAAC;IACDR,aAAa,EAAE;EACjB,CAAC,CAAC;AACJ","names":["Observable","argsOrArgArray","OperatorSubscriber","noop","innerFrom","onErrorResumeNext","_i","sources","nextSources","subscriber","sourceIndex","subscribeNext","length","nextSource","err","innerSubscriber","undefined","subscribe","add","complete"],"sourceRoot":"","sources":["../../../../src/internal/observable/onErrorResumeNext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}