{"ast":null,"code":"import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n  var errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () {\n    return errorOrErrorFactory;\n  };\n  var init = function (subscriber) {\n    return subscriber.error(errorFactory());\n  };\n  return new Observable(scheduler ? function (subscriber) {\n    return scheduler.schedule(init, 0, subscriber);\n  } : init);\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAG1C,SAASC,UAAU,QAAQ,oBAAoB;AAqH/C,OAAM,SAAUC,UAAU,CAACC,mBAAwB,EAAEC,SAAyB;EAC5E,IAAMC,YAAY,GAAGJ,UAAU,CAACE,mBAAmB,CAAC,GAAGA,mBAAmB,GAAG;IAAM,0BAAmB;EAAnB,CAAmB;EACtG,IAAMG,IAAI,GAAG,UAACC,UAA6B;IAAK,iBAAU,CAACC,KAAK,CAACH,YAAY,EAAE,CAAC;EAAhC,CAAgC;EAChF,OAAO,IAAIL,UAAU,CAACI,SAAS,GAAG,UAACG,UAAU;IAAK,gBAAS,CAACE,QAAQ,CAACH,IAAW,EAAE,CAAC,EAAEC,UAAU,CAAC;EAA9C,CAA8C,GAAGD,IAAI,CAAC;AAC1G","names":["Observable","isFunction","throwError","errorOrErrorFactory","scheduler","errorFactory","init","subscriber","error","schedule"],"sourceRoot":"","sources":["../../../../src/internal/observable/throwError.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}