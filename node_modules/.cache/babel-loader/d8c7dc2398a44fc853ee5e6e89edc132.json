{"ast":null,"code":"import * as Chess from 'chess.js';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { auth } from './firebase';\nimport { fromDocRef } from 'rxfire/firestore';\nlet gameRef;\nlet member;\nconst chess = new Chess();\nexport let gameSubject;\nexport async function initGame(gameRefFb) {\n  const {\n    currentUser\n  } = auth;\n  if (gameRefFb) {\n    gameRef = gameRefFb;\n    const initialGame = await gameRefFb.get().then(doc => doc.data());\n    if (!initialGame) {\n      return 'notfound';\n    }\n    const creator = initialGame.members.find(m => m.creator === true);\n    if (initialGame.status === 'waiting' && creator.uid !== currentUser.uid) {\n      const currUser = {\n        uid: currentUser.uid,\n        name: localStorage.getItem('userName'),\n        piece: creator.piece === 'w' ? 'b' : 'w'\n      };\n      const updatedMembers = [...initialGame.members, currUser];\n      await gameRefFb.update({\n        members: updatedMembers,\n        status: 'ready'\n      });\n    } else if (!initialGame.members.map(m => m.uid).includes(currentUser.uid)) {\n      return 'intruder';\n    }\n    chess.reset();\n    gameSubject = fromDocRef(gameRefFb).pipe(map(gameDoc => {\n      const game = gameDoc.data();\n      const {\n        pendingPromotion,\n        gameData,\n        ...restOfGame\n      } = game;\n      member = game.members.find(m => m.uid === currentUser.uid);\n      const oponent = game.members.find(m => m.uid !== currentUser.uid);\n      if (gameData) {\n        chess.load(gameData);\n      }\n      const isGameOver = chess.game_over();\n      return {\n        board: chess.board(),\n        pendingPromotion,\n        isGameOver,\n        position: member.piece,\n        member,\n        oponent,\n        result: isGameOver ? getGameResult() : null,\n        ...restOfGame\n      };\n    }));\n  } else {\n    gameRef = null;\n    gameSubject = new BehaviorSubject();\n    const savedGame = localStorage.getItem('savedGame');\n    if (savedGame) {\n      chess.load(savedGame);\n    }\n    updateGame();\n  }\n}\nexport async function resetGame() {\n  if (gameRef) {\n    await updateGame(null, true);\n    chess.reset();\n  } else {\n    chess.reset();\n    updateGame();\n  }\n}\nexport function handleMove(from, to) {\n  const promotions = chess.moves({\n    verbose: true\n  }).filter(m => m.promotion);\n  console.table(promotions);\n  let pendingPromotion;\n  if (promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)) {\n    pendingPromotion = {\n      from,\n      to,\n      color: promotions[0].color\n    };\n    updateGame(pendingPromotion);\n  }\n  if (!pendingPromotion) {\n    move(from, to);\n  }\n}\nexport function move(from, to, promotion) {\n  let tempMove = {\n    from,\n    to\n  };\n  if (promotion) {\n    tempMove.promotion = promotion;\n  }\n  console.log({\n    tempMove,\n    member\n  }, chess.turn());\n  if (gameRef) {\n    if (member.piece === chess.turn()) {\n      const legalMove = chess.move(tempMove);\n      if (legalMove) {\n        updateGame();\n      }\n    }\n  } else {\n    const legalMove = chess.move(tempMove);\n    if (legalMove) {\n      updateGame();\n    }\n  }\n}\nasync function updateGame(pendingPromotion, reset) {\n  const isGameOver = chess.game_over();\n  if (gameRef) {\n    const updatedData = {\n      gameData: chess.fen(),\n      pendingPromotion: pendingPromotion || null\n    };\n    console.log({\n      updateGame\n    });\n    if (reset) {\n      updatedData.status = 'over';\n    }\n    await gameRef.update(updatedData);\n  } else {\n    const newGame = {\n      board: chess.board(),\n      pendingPromotion,\n      isGameOver,\n      position: chess.turn(),\n      result: isGameOver ? getGameResult() : null\n    };\n    localStorage.setItem('savedGame', chess.fen());\n    gameSubject.next(newGame);\n  }\n}\nfunction getGameResult() {\n  if (chess.in_checkmate()) {\n    const winner = chess.turn() === \"w\" ? 'BLACK' : 'WHITE';\n    return `CHECKMATE - WINNER - ${winner}`;\n  } else if (chess.in_draw()) {\n    let reason = '50 - MOVES - RULE';\n    if (chess.in_stalemate()) {\n      reason = 'STALEMATE';\n    } else if (chess.in_threefold_repetition()) {\n      reason = 'REPETITION';\n    } else if (chess.insufficient_material()) {\n      reason = \"INSUFFICIENT MATERIAL\";\n    }\n    return `DRAW - ${reason}`;\n  } else {\n    return 'UNKNOWN REASON';\n  }\n}","map":{"version":3,"names":["Chess","BehaviorSubject","map","auth","fromDocRef","gameRef","member","chess","gameSubject","initGame","gameRefFb","currentUser","initialGame","get","then","doc","data","creator","members","find","m","status","uid","currUser","name","localStorage","getItem","piece","updatedMembers","update","includes","reset","pipe","gameDoc","game","pendingPromotion","gameData","restOfGame","oponent","load","isGameOver","game_over","board","position","result","getGameResult","savedGame","updateGame","resetGame","handleMove","from","to","promotions","moves","verbose","filter","promotion","console","table","some","p","color","move","tempMove","log","turn","legalMove","updatedData","fen","newGame","setItem","next","in_checkmate","winner","in_draw","reason","in_stalemate","in_threefold_repetition","insufficient_material"],"sources":["C:/Users/ASUS/OneDrive/Documentos/UTJ/6-A/Estadias/Ajedrez/react-chess-feature-online/src/Game.js"],"sourcesContent":["import * as Chess from 'chess.js'\nimport { BehaviorSubject } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { auth } from './firebase'\nimport { fromDocRef } from 'rxfire/firestore'\n\nlet gameRef\nlet member\n\nconst chess = new Chess()\n\nexport let gameSubject\n\nexport async function initGame(gameRefFb) {\n    const { currentUser } = auth\n    if (gameRefFb) {\n        gameRef = gameRefFb\n        const initialGame = await gameRefFb.get().then(doc => doc.data())\n        if (!initialGame) {\n            return 'notfound'\n        }\n        const creator = initialGame.members.find(m => m.creator === true)\n\n        if (initialGame.status === 'waiting' && creator.uid !== currentUser.uid) {\n            const currUser = {\n                uid: currentUser.uid,\n                name: localStorage.getItem('userName'),\n                piece: creator.piece === 'w' ? 'b' : 'w'\n            }\n            const updatedMembers = [...initialGame.members, currUser]\n            await gameRefFb.update({ members: updatedMembers, status: 'ready' })\n\n        } else if (!initialGame.members.map(m => m.uid).includes(currentUser.uid)) {\n            return 'intruder'\n        }\n        chess.reset()\n\n        gameSubject = fromDocRef(gameRefFb).pipe(\n            map(gameDoc => {\n                const game = gameDoc.data()\n                const { pendingPromotion, gameData, ...restOfGame } = game\n                member = game.members.find(m => m.uid === currentUser.uid)\n                const oponent = game.members.find(m => m.uid !== currentUser.uid)\n                if (gameData) {\n                    chess.load(gameData)\n                }\n                const isGameOver = chess.game_over()\n                return {\n                    board: chess.board(),\n                    pendingPromotion,\n                    isGameOver,\n                    position: member.piece,\n                    member,\n                    oponent,\n                    result: isGameOver ? getGameResult() : null,\n                    ...restOfGame\n                }\n            })\n        )\n\n    } else {\n        gameRef = null\n        gameSubject = new BehaviorSubject()\n        const savedGame = localStorage.getItem('savedGame')\n        if (savedGame) {\n            chess.load(savedGame)\n        }\n        updateGame()\n    }\n\n}\n\nexport async function resetGame() {\n    if (gameRef) {\n        await updateGame(null, true)\n        chess.reset()\n    } else {\n        chess.reset()\n        updateGame()\n    }\n\n}\n\nexport function handleMove(from, to) {\n    const promotions = chess.moves({ verbose: true }).filter(m => m.promotion)\n    console.table(promotions)\n    let pendingPromotion\n    if (promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)) {\n        pendingPromotion = { from, to, color: promotions[0].color }\n        updateGame(pendingPromotion)\n    }\n\n    if (!pendingPromotion) {\n        move(from, to)\n    }\n}\n\n\nexport function move(from, to, promotion) {\n    let tempMove = { from, to }\n    if (promotion) {\n        tempMove.promotion = promotion\n    }\n    console.log({ tempMove, member }, chess.turn())\n    if (gameRef) {\n        if (member.piece === chess.turn()) {\n            const legalMove = chess.move(tempMove)\n            if (legalMove) {\n                updateGame()\n            }\n        }\n    } else {\n        const legalMove = chess.move(tempMove)\n\n        if (legalMove) {\n            updateGame()\n        }\n    }\n\n}\n\nasync function updateGame(pendingPromotion, reset) {\n    const isGameOver = chess.game_over()\n    if (gameRef) {\n        const updatedData = { gameData: chess.fen(), pendingPromotion: pendingPromotion || null }\n        console.log({ updateGame })\n        if (reset) {\n            updatedData.status = 'over'\n        }\n        await gameRef.update(updatedData)\n    } else {\n        const newGame = {\n            board: chess.board(),\n            pendingPromotion,\n            isGameOver,\n            position: chess.turn(),\n            result: isGameOver ? getGameResult() : null\n        }\n        localStorage.setItem('savedGame', chess.fen())\n        gameSubject.next(newGame)\n    }\n\n\n}\nfunction getGameResult() {\n    if (chess.in_checkmate()) {\n        const winner = chess.turn() === \"w\" ? 'BLACK' : 'WHITE'\n        return `CHECKMATE - WINNER - ${winner}`\n    } else if (chess.in_draw()) {\n        let reason = '50 - MOVES - RULE'\n        if (chess.in_stalemate()) {\n            reason = 'STALEMATE'\n        } else if (chess.in_threefold_repetition()) {\n            reason = 'REPETITION'\n        } else if (chess.insufficient_material()) {\n            reason = \"INSUFFICIENT MATERIAL\"\n        }\n        return `DRAW - ${reason}`\n    } else {\n        return 'UNKNOWN REASON'\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}