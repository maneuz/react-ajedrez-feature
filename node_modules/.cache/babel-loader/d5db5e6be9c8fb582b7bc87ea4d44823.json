{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\nexport function zip() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var resultSelector = popResultSelector(args);\n  var sources = argsOrArgArray(args);\n  return sources.length ? new Observable(function (subscriber) {\n    var buffers = sources.map(function () {\n      return [];\n    });\n    var completed = sources.map(function () {\n      return false;\n    });\n    subscriber.add(function () {\n      buffers = completed = null;\n    });\n    var _loop_1 = function (sourceIndex) {\n      innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n        buffers[sourceIndex].push(value);\n        if (buffers.every(function (buffer) {\n          return buffer.length;\n        })) {\n          var result = buffers.map(function (buffer) {\n            return buffer.shift();\n          });\n          subscriber.next(resultSelector ? resultSelector.apply(void 0, __spreadArray([], __read(result))) : result);\n          if (buffers.some(function (buffer, i) {\n            return !buffer.length && completed[i];\n          })) {\n            subscriber.complete();\n          }\n        }\n      }, function () {\n        completed[sourceIndex] = true;\n        !buffers[sourceIndex].length && subscriber.complete();\n      }));\n    };\n    for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n      _loop_1(sourceIndex);\n    }\n    return function () {\n      buffers = completed = null;\n    };\n  }) : EMPTY;\n}","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,wBAAwB,QAAQ,iCAAiC;AAC1E,SAASC,iBAAiB,QAAQ,cAAc;AA4ChD,OAAM,SAAUC,GAAG;EAAC;OAAA,UAAkB,EAAlBC,qBAAkB,EAAlBA,IAAkB;IAAlBC;;EAClB,IAAMC,cAAc,GAAGJ,iBAAiB,CAACG,IAAI,CAAC;EAE9C,IAAME,OAAO,GAAGR,cAAc,CAACM,IAAI,CAA0B;EAE7D,OAAOE,OAAO,CAACC,MAAM,GACjB,IAAIX,UAAU,CAAY,UAACY,UAAU;IAGnC,IAAIC,OAAO,GAAgBH,OAAO,CAACI,GAAG,CAAC;MAAM,SAAE;IAAF,CAAE,CAAC;IAKhD,IAAIC,SAAS,GAAGL,OAAO,CAACI,GAAG,CAAC;MAAM,YAAK;IAAL,CAAK,CAAC;IAGxCF,UAAU,CAACI,GAAG,CAAC;MACbH,OAAO,GAAGE,SAAS,GAAG,IAAK;IAC7B,CAAC,CAAC;4BAKOE,WAAW;MAClBhB,SAAS,CAACS,OAAO,CAACO,WAAW,CAAC,CAAC,CAACC,SAAS,CACvCd,wBAAwB,CACtBQ,UAAU,EACV,UAACO,KAAK;QACJN,OAAO,CAACI,WAAW,CAAC,CAACG,IAAI,CAACD,KAAK,CAAC;QAIhC,IAAIN,OAAO,CAACQ,KAAK,CAAC,UAACC,MAAM;UAAK,aAAM,CAACX,MAAM;QAAb,CAAa,CAAC,EAAE;UAC5C,IAAMY,MAAM,GAAQV,OAAO,CAACC,GAAG,CAAC,UAACQ,MAAM;YAAK,aAAM,CAACE,KAAK,EAAG;UAAf,CAAe,CAAC;UAE5DZ,UAAU,CAACa,IAAI,CAAChB,cAAc,GAAGA,cAAc,wCAAIc,MAAM,MAAIA,MAAM,CAAC;UAIpE,IAAIV,OAAO,CAACa,IAAI,CAAC,UAACJ,MAAM,EAAEK,CAAC;YAAK,QAACL,MAAM,CAACX,MAAM,IAAII,SAAS,CAACY,CAAC,CAAC;UAA9B,CAA8B,CAAC,EAAE;YAC/Df,UAAU,CAACgB,QAAQ,EAAE;;;MAG3B,CAAC,EACD;QAGEb,SAAS,CAACE,WAAW,CAAC,GAAG,IAAI;QAI7B,CAACJ,OAAO,CAACI,WAAW,CAAC,CAACN,MAAM,IAAIC,UAAU,CAACgB,QAAQ,EAAE;MACvD,CAAC,CACF,CACF;;IA/BH,KAAK,IAAIX,WAAW,GAAG,CAAC,EAAE,CAACL,UAAU,CAACiB,MAAM,IAAIZ,WAAW,GAAGP,OAAO,CAACC,MAAM,EAAEM,WAAW,EAAE;cAAlFA,WAAW;;IAmCpB,OAAO;MACLJ,OAAO,GAAGE,SAAS,GAAG,IAAK;IAC7B,CAAC;EACH,CAAC,CAAC,GACFZ,KAAK;AACX","names":["Observable","innerFrom","argsOrArgArray","EMPTY","createOperatorSubscriber","popResultSelector","zip","_i","args","resultSelector","sources","length","subscriber","buffers","map","completed","add","sourceIndex","subscribe","value","push","every","buffer","result","shift","next","some","i","complete","closed"],"sourceRoot":"","sources":["../../../../src/internal/observable/zip.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}